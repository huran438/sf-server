@using System.Reflection
@using Microsoft.AspNetCore.Mvc.TagHelpers
@using SFServer.Shared.Server.UserProfile
@model SFServer.UI.Models.UserProfiles.EditUserProfileViewModel

<h1>Edit User Profile</h1>

<!-- Bootstrap Tabs -->
<ul class="nav nav-tabs" id="profileTab" role="tablist">
    <li class="nav-item" role="presentation">
        <button class="nav-link active" id="general-tab" data-bs-toggle="tab" data-bs-target="#general" type="button"
                role="tab" aria-controls="general" aria-selected="true">General
        </button>
    </li>
    <li class="nav-item" role="presentation">
        <button class="nav-link" id="credentials-tab" data-bs-toggle="tab" data-bs-target="#credentials" type="button"
                role="tab"
                aria-controls="credentials" aria-selected="false">Credentials
        </button>
    </li>
    <li class="nav-item" role="presentation">
        <button class="nav-link" id="wallet-tab" data-bs-toggle="tab" data-bs-target="#wallet" type="button" role="tab"
                aria-controls="wallet" aria-selected="false">Wallet
        </button>
    </li>
    <li class="nav-item" role="presentation">
        <button class="nav-link" id="inventory-tab" data-bs-toggle="tab" data-bs-target="#inventory" type="button" role="tab"
                aria-controls="inventory" aria-selected="false">Inventory
        </button>
    </li>
</ul>

<div class="tab-content" id="profileTabContent">
    @{
        var currentUser = User.FindFirst("UserId");
        var currentUserId = currentUser?.Value;
        var isSelf = currentUserId == Model.Id.ToString();
        var isAdmin = User.IsInRole("Admin");
    }

    <!-- General Tab -->
    <div class="tab-pane fade show active" id="general" role="tabpanel" aria-labelledby="general-tab">
        <form asp-action="Edit" method="post">
            @Html.AntiForgeryToken()
            <div asp-validation-summary="All" class="text-danger"></div>
            <input type="hidden" asp-for="Id"/>
            <div class="form-group mb-3">
                <label>Id</label>
                <input class="form-control" value="@Model.Id" disabled/>
            </div>
            <div class="form-group mb-3">
                <label asp-for="Username"></label>
                <input asp-for="Username" class="form-control"/>
                <span asp-validation-for="Username" class="text-danger"></span>
            </div>
            <div class="form-group mb-3">
                <label asp-for="Email"></label>
                <input asp-for="Email" class="form-control"/>
                <span asp-validation-for="Email" class="text-danger"></span>
            </div>
            @if (Model.Role == UserRole.Admin)
            {
                <input type="hidden" asp-for="Role"/>
                <div class="form-group mb-3">
                    <label>Role</label>
                    <input class="form-control" value="Admin" disabled/>
                </div>
            }
            else
            {
                <div class="form-group mb-3">
                    <label asp-for="Role">Role</label>
                    <enum-dropdown asp-for="Role" enum-type="@(typeof(UserRole))"
                                   exclude="@(new[] { nameof(UserRole.Admin), nameof(UserRole.Guest) })"/>
                    <span asp-validation-for="Role" class="text-danger"></span>
                </div>
            }

            <div class="form-group mb-3">
                <label asp-for="DeviceIds">Device Ids</label>
                <table class="table table-sm">
                    <thead>
                    <tr>
                        <th scope="col">#</th>
                        <th scope="col">Device Id</th>
                        <th scope="col">Device Info</th>
                        <th scope="col">Actions</th>
                    </tr>
                    </thead>
                    <tbody>
                    @for (int i = 0; i < Model.DeviceIds.Length; i++)
                    {
                        <tr>
                            <th scope="row">@(i + 1)</th>
                            <td>@Model.DeviceIds[i]</td>
                            <td>
                                <p class="d-inline-flex gap-1">
                                    <a class="icon-link icon-link-hover" data-bs-toggle="collapse"
                                       href="#collapseExample" role="button" aria-expanded="false"
                                       aria-controls="collapseExample">
                                        Expand Device Information
                                        <svg xmlns="http://www.w3.org/2000/svg" class="bi" viewBox="0 0 16 16"
                                             aria-hidden="true">
                                            <path
                                                d="M1 8a.5.5 0 0 1 .5-.5h11.793l-3.147-3.146a.5.5 0 0 1 .708-.708l4 4a.5.5 0 0 1 0 .708l-4 4a.5.5 0 0 1-.708-.708L13.293 8.5H1.5A.5.5 0 0 1 1 8z"/>
                                        </svg>
                                    </a>
                                </p>
                                <div class="collapse" id="collapseExample">
                                    <table class="table table-sm">
                                        <thead>
                                        <tr>
                                            <th scope="col">Parameter</th>
                                            <th scope="col">Info</th>
                                        </tr>
                                        </thead>
                                        <tbody class="table-group-divider">
                                        @{
                                            if (Model.UserDevices[i] != null)
                                            {
                                                var properties = typeof(UserDevice).GetProperties(BindingFlags.Instance |
                                                                                                  BindingFlags.Public | BindingFlags.NonPublic);
                                                for (var index = 3; index < properties.Length; index++)
                                                {
                                                    var property = properties[index];
                                                    if (!property.CanRead)
                                                    {
                                                        continue;
                                                    }

                                                    var propertyValue = property.GetValue(Model.UserDevices[i]);

                                                    <tr>
                                                        <th scope="row">@property.Name</th>
                                                        <td>@propertyValue</td>
                                                    </tr>
                                                }
                                            }
                                        }
                                        </tbody>
                                    </table>
                                </div>
                            </td>
                            <td>
                                <button type="button" class="btn btn-danger"
                                        style="--bs-btn-padding-y: .25rem; --bs-btn-padding-x: .5rem; --bs-btn-font-size: .75rem;">
                                    Delete
                                </button>
                            </td>
                        </tr>
                    }
                    </tbody>
                </table>
            </div>

            <div class="form-group mb-3">
                @if (Model.Role is UserRole.Admin or UserRole.Developer)
                {
                    <div class="form-check form-switch">
                        <label asp-for="DebugMode" class="form-check-label">Debug Mode</label>
                        <input asp-for="DebugMode" class="form-check-input" type="checkbox"></input>
                    </div>
                }
                else
                {
                    <div class="form-check form-switch">
                        <label asp-for="DebugMode" class="form-check-label">Debug Mode</label>
                        <input asp-for="DebugMode" class="form-check-input" type="checkbox" disabled/>
                    </div>
                }
            </div>

            @if (isAdmin || isSelf)
            {
                <h3 class="mt-4">Change Password</h3>
                <div class="form-group mb-3">
                    <label asp-for="NewPassword">New Password</label>
                    <input asp-for="NewPassword" type="password" class="form-control" placeholder="New Password"/>
                    <span asp-validation-for="NewPassword" class="text-danger"></span>
                </div>
                <div class="form-group mb-3">
                    <label asp-for="ConfirmPassword">Confirm Password</label>
                    <input asp-for="ConfirmPassword" type="password" class="form-control"
                           placeholder="Confirm New Password"/>
                    <span asp-validation-for="ConfirmPassword" class="text-danger"></span>
                </div>
            }

            <div class="mt-3">
                <div class="btn-group" role="group" aria-label="Basic example">
                    <button type="submit" class="btn btn-success">Save</button>
                    <a asp-action="Index" class="btn btn-secondary">Cancel</a>
                    <!-- Remove Profile button placed next to Save and Cancel -->
                    <button type="button" class="btn btn-danger" data-bs-toggle="modal"
                            data-bs-target="#confirmDeleteModal">Remove Profile
                    </button>
                </div>
            </div>
        </form>
    </div>

    <!-- Credentials Tab -->
    <div class="tab-pane fade" id="credentials" role="tabpanel" aria-labelledby="credentials-tab">
        <h3 class="mt-3">Credentials</h3>
        <input type="hidden" asp-for="GoogleId"/>
        <div class="form-group mb-3">
            <label>Google</label>
            <input class="form-control" value="@Model.GoogleId" disabled/>
        </div>
        <input type="hidden" asp-for="AppleId"/>
        <div class="form-group mb-3">
            <label>Apple</label>
            <input class="form-control" value="@Model.AppleId" disabled/>
        </div>
        <input type="hidden" asp-for="FacebookId"/>
        <div class="form-group mb-3">
            <label>Facebook</label>
            <input class="form-control" value="@Model.FacebookId" disabled/>
        </div>
    </div>

    <!-- Wallet Tab -->
    <div class="tab-pane fade" id="wallet" role="tabpanel" aria-labelledby="wallet-tab">
        <h3 class="mt-3">Wallet</h3>
        <div class="container mt-4">
            <div class="card">
                <div class="card-header">
                    <h4 class="mb-0">Currency</h4>
                </div>
                <div class="card-body">
                    <form asp-action="UpdateWallet" method="post">
                        @Html.AntiForgeryToken()
                        <div asp-validation-summary="All" class="text-danger"></div>
                        <input type="hidden" name="UserId" value="@Model.Id"/>

                        <table class="table table-hover table-bordered">
                            <thead class="table">
                            <tr>
                                <th scope="col">Currency</th>
                                <th scope="col">Amount</th>
                            </tr>
                            </thead>
                            <tbody>
                            @for (var i = 0; i < Model.WalletItems.Count; i++)
                            {
                                <tr>
                                    <td>
                                        @Html.Hidden($"WalletItems[{i}].WalletItemId", Model.WalletItems[i].Id)
                                        <span class="fw-bold">@Model.WalletItems[i].Currency</span>
                                    </td>
                                    <td>
                                        <input type="number" step="0.01" class="form-control"
                                               name="WalletItems[@i].Amount"
                                               value="@Model.WalletItems[i].Amount"/>
                                    </td>
                                </tr>
                            }
                            </tbody>
                        </table>

                        <div class="d-grid">
                            <button type="submit" class="btn btn-primary">Save</button>
                        </div>
                    </form>
                </div>
            </div>
        </div>
    </div>
    <!-- Inventory Tab -->
    <div class="tab-pane fade" id="inventory" role="tabpanel" aria-labelledby="inventory-tab">
        <h3 class="mt-3">Inventory</h3>
        <table class="table table-bordered mt-2">
            <thead>
            <tr>
                <th>Item</th>
                <th>Amount</th>
            </tr>
            </thead>
            <tbody>
            @foreach (var inv in Model.InventoryItems)
            {
                <tr>
                    <td>@inv.Title</td>
                    <td>@inv.Amount</td>
                </tr>
            }
            </tbody>
        </table>
    </div>
</div>

<!-- Delete Profile Modal Partial -->
@await Html.PartialAsync("_DeleteProfileModal", Model.Id)

@section Scripts {
    <script>
        (function () {
            // Read the active tab value from TempData.
            var activeTab = '@(TempData["activeTab"] ?? "")';
            if (activeTab !== "") {
                // Construct the tab button's id (e.g., "wallet-tab", "general-tab", "credentials-tab")
                var tabButtonId = activeTab + "-tab";
                var tabButton = document.getElementById(tabButtonId);
                if (tabButton) {
                    var tabInstance = new bootstrap.Tab(tabButton);
                    tabInstance.show();
                }
            }
        })();
    </script>

    @{ await Html.RenderPartialAsync("_ValidationScriptsPartial"); }
}
