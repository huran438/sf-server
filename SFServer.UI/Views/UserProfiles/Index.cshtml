@using Microsoft.AspNetCore.Mvc.TagHelpers
@using SFServer.Shared.Server.UserProfile
@model SFServer.UI.Models.UserProfiles.UserProfilesIndexViewModel

@{
    ViewData["Title"] = "User Profiles";
    
    // Helper function to toggle sort order
    string ToggleSortOrder(string currentOrder) => currentOrder == "asc" ? "desc" : "asc";

    // Helper to generate sort URL for a given column.
    string SortUrl(string column)
    {
        // If the column is the current sort column, toggle the order; otherwise default to ascending.
        string order = Model.SortColumn.Equals(column, StringComparison.OrdinalIgnoreCase) ? ToggleSortOrder(Model.SortOrder) : "asc";
        return Url.Action("Index", new { page = Model.CurrentPage, search = Model.SearchQuery, sortColumn = column, sortOrder = order });
    }
}

<h1>User Profiles</h1>

<!-- Search Form -->
<form method="get" asp-action="Index" class="mb-3">
    <div class="input-group">
        <input type="text" name="search" value="@Model.SearchQuery" class="form-control" placeholder="Search users..." />
        <button type="submit" class="btn btn-outline-secondary">Search</button>
    </div>
</form>

<p>
    <a asp-action="Create" class="btn btn-primary">Add User</a>
</p>

@if (TempData["Error"] != null)
{
    <div class="alert alert-danger">
        @TempData["Error"]
    </div>
}

<div class="table-responsive" style="min-height: calc(100vh - 300px);">
    <table class="table">
        <thead>
            <tr>
                <th>
                    <a href="@SortUrl("Username")">Username
                        @if(Model.SortColumn.Equals("Username", StringComparison.OrdinalIgnoreCase))
                        {
                            <span>@(Model.SortOrder == "asc" ? "▲" : "▼")</span>
                        }
                    </a>
                </th>
                <th>
                    <a href="@SortUrl("Email")">Email
                        @if(Model.SortColumn.Equals("Email", StringComparison.OrdinalIgnoreCase))
                        {
                            <span>@(Model.SortOrder == "asc" ? "▲" : "▼")</span>
                        }
                    </a>
                </th>
                <th>
                    <a href="@SortUrl("CreatedAt")">Created At
                        @if(Model.SortColumn.Equals("CreatedAt", StringComparison.OrdinalIgnoreCase))
                        {
                            <span>@(Model.SortOrder == "asc" ? "▲" : "▼")</span>
                        }
                    </a>
                </th>
                <th>
                    <a href="@SortUrl("LastEditAt")">Last Edit
                        @if(Model.SortColumn.Equals("LastEditAt", StringComparison.OrdinalIgnoreCase))
                        {
                            <span>@(Model.SortOrder == "asc" ? "▲" : "▼")</span>
                        }
                    </a>
                </th>
                <th>
                    <a href="@SortUrl("LastLoginAt")">Last Login
                        @if(Model.SortColumn.Equals("LastLoginAt", StringComparison.OrdinalIgnoreCase))
                        {
                            <span>@(Model.SortOrder == "asc" ? "▲" : "▼")</span>
                        }
                    </a>
                </th>
                <th>
                    <a href="@SortUrl("Role")">Role
                        @if(Model.SortColumn.Equals("Role", StringComparison.OrdinalIgnoreCase))
                        {
                            <span>@(Model.SortOrder == "asc" ? "▲" : "▼")</span>
                        }
                    </a>
                </th>
                <th>Actions</th>
            </tr>
        </thead>
        <tbody>
        @foreach (var user in Model.Users)
        {
            <tr>
                <td>@user.Username</td>
                <td>@user.Email</td>
                <td>@user.CreatedAt</td>
                <td>@user.LastEditAt</td>
                <td>@user.LastLoginAt</td>
                <td>@user.Role</td>
                <td>
                    @if (User.IsInRole("Developer") && user.Role == UserRole.Admin)
                    {
                        <button class="btn btn-sm btn-secondary" disabled>Edit</button>
                    }
                    else
                    {
                        <a asp-action="Edit" asp-route-id="@user.Id" class="btn btn-sm btn-warning">Edit</a>
                    }
                </td>
            </tr>
        }
        </tbody>
    </table>
</div>

<!-- Pagination Controls -->
<nav aria-label="User profiles pagination">
    <ul class="pagination justify-content-center mt-3">
        @if (Model.CurrentPage > 1)
        {
            <li class="page-item">
                <a class="page-link" asp-action="Index" asp-route-page="@(Model.CurrentPage - 1)" asp-route-search="@Model.SearchQuery" asp-route-sortColumn="@Model.SortColumn" asp-route-sortOrder="@Model.SortOrder">Previous</a>
            </li>
        }
        else
        {
            <li class="page-item disabled"><span class="page-link">Previous</span></li>
        }

        @for (int i = 1; i <= Model.TotalPages; i++)
        {
            if (i == Model.CurrentPage)
            {
                <li class="page-item active">
                    <span class="page-link">@i</span>
                </li>
            }
            else
            {
                <li class="page-item">
                    <a class="page-link" asp-action="Index" asp-route-page="@i" asp-route-search="@Model.SearchQuery" asp-route-sortColumn="@Model.SortColumn" asp-route-sortOrder="@Model.SortOrder">@i</a>
                </li>
            }
        }

        @if (Model.CurrentPage < Model.TotalPages)
        {
            <li class="page-item">
                <a class="page-link" asp-action="Index" asp-route-page="@(Model.CurrentPage + 1)" asp-route-search="@Model.SearchQuery" asp-route-sortColumn="@Model.SortColumn" asp-route-sortOrder="@Model.SortOrder">Next</a>
            </li>
        }
        else
        {
            <li class="page-item disabled"><span class="page-link">Next</span></li>
        }
    </ul>
</nav>
