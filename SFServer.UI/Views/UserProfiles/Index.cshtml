@using Microsoft.AspNetCore.Mvc.TagHelpers
@using SFServer.Shared.Server.UserProfile
@model SFServer.UI.Models.UserProfiles.UserProfilesIndexViewModel

@{
    ViewData["Title"] = "User Profiles";
    
    // Helper function to toggle sort order
    string ToggleSortOrder(string currentOrder) => currentOrder == "asc" ? "desc" : "asc";

    // Helper to generate sort URL for a given column.
    string SortUrl(string column)
    {
        // If the column is the current sort column, toggle the order; otherwise default to ascending.
        string order = Model.SortColumn.Equals(column, StringComparison.OrdinalIgnoreCase) ? ToggleSortOrder(Model.SortOrder) : "asc";
        return Url.Action("Index", new { page = Model.CurrentPage, search = Model.SearchQuery, pageSize = Model.PageSize, sortColumn = column, sortOrder = order });
    }
}

<h1>User Profiles</h1>

<!-- Search Form -->
<form method="get" asp-action="Index" class="mb-3">
    <div class="input-group">
        <input type="text" name="search" value="@Model.SearchQuery" class="form-control" placeholder="Search users..." />
        <input type="hidden" name="pageSize" value="@Model.PageSize" />
        <input type="hidden" name="sortColumn" value="@Model.SortColumn" />
        <input type="hidden" name="sortOrder" value="@Model.SortOrder" />
        <button type="submit" class="btn btn-outline-secondary">Search</button>
    </div>
</form>

<p>
    <a asp-action="Create" class="btn btn-primary">Add User</a>
</p>

@if (TempData["Error"] != null)
{
    <div class="alert alert-danger">
        @TempData["Error"]
    </div>
}

<div class="table-responsive" style="min-height: calc(100vh - 300px);">
    <table class="table">
        <thead>
            <tr>
                <th>
                    <a href="@SortUrl("Username")">Username
                        @if(Model.SortColumn.Equals("Username", StringComparison.OrdinalIgnoreCase))
                        {
                            <span>@(Model.SortOrder == "asc" ? "▲" : "▼")</span>
                        }
                    </a>
                </th>
                <th>
                    <a href="@SortUrl("Email")">Email
                        @if(Model.SortColumn.Equals("Email", StringComparison.OrdinalIgnoreCase))
                        {
                            <span>@(Model.SortOrder == "asc" ? "▲" : "▼")</span>
                        }
                    </a>
                </th>
                <th>
                    <a href="@SortUrl("CreatedAt")">Created At
                        @if(Model.SortColumn.Equals("CreatedAt", StringComparison.OrdinalIgnoreCase))
                        {
                            <span>@(Model.SortOrder == "asc" ? "▲" : "▼")</span>
                        }
                    </a>
                </th>
                <th>
                    <a href="@SortUrl("LastEditAt")">Last Edit
                        @if(Model.SortColumn.Equals("LastEditAt", StringComparison.OrdinalIgnoreCase))
                        {
                            <span>@(Model.SortOrder == "asc" ? "▲" : "▼")</span>
                        }
                    </a>
                </th>
                <th>
                    <a href="@SortUrl("LastLoginAt")">Last Login
                        @if(Model.SortColumn.Equals("LastLoginAt", StringComparison.OrdinalIgnoreCase))
                        {
                            <span>@(Model.SortOrder == "asc" ? "▲" : "▼")</span>
                        }
                    </a>
                </th>
                <th>
                    <a href="@SortUrl("Role")">Role
                        @if(Model.SortColumn.Equals("Role", StringComparison.OrdinalIgnoreCase))
                        {
                            <span>@(Model.SortOrder == "asc" ? "▲" : "▼")</span>
                        }
                    </a>
                </th>
                <th>Actions</th>
            </tr>
        </thead>
        <tbody>
        @foreach (var user in Model.Users)
        {
            <tr>
                <td>@user.Username</td>
                <td>@user.Email</td>
                <td>@user.CreatedAt</td>
                <td>@user.LastEditAt</td>
                <td>@user.LastLoginAt</td>
                <td>@user.Role</td>
                <td>
                    @if (User.IsInRole("Developer") && user.Role == UserRole.Admin)
                    {
                        <button class="btn btn-sm btn-secondary" disabled>Edit</button>
                    }
                    else
                    {
                        <a asp-action="Edit" asp-route-id="@user.Id" class="btn btn-sm btn-warning">Edit</a>
                    }
                </td>
            </tr>
        }
        </tbody>
    </table>
</div>

<!-- Pagination Controls -->
<nav aria-label="User profiles pagination" class="mt-3">
    <div class="d-flex justify-content-center align-items-center gap-3 flex-wrap">
        <form method="get" class="d-flex align-items-center">
            <input type="hidden" name="search" value="@Model.SearchQuery" />
            <input type="hidden" name="sortColumn" value="@Model.SortColumn" />
            <input type="hidden" name="sortOrder" value="@Model.SortOrder" />
            <input type="hidden" name="page" value="1" />
            <select name="pageSize" class="form-select form-select-sm" onchange="this.form.submit()">
                <option value="10" selected="@(Model.PageSize == 10 ? "selected" : null)">10</option>
                <option value="20" selected="@(Model.PageSize == 20 ? "selected" : null)">20</option>
                <option value="50" selected="@(Model.PageSize == 50 ? "selected" : null)">50</option>
            </select>
        </form>

        <span class="me-2">
            @{int startItem = (Model.CurrentPage - 1) * Model.PageSize + 1;}
            @{int endItem = Math.Min(Model.CurrentPage * Model.PageSize, Model.TotalCount);}
            @startItem-@endItem of @Model.TotalCount
        </span>
        <ul class="pagination mb-0">
            <li class="page-item @(Model.CurrentPage == 1 ? "disabled" : "")">
                <a class="page-link" asp-action="Index" asp-route-page="@(Model.CurrentPage - 1)" asp-route-search="@Model.SearchQuery" asp-route-sortColumn="@Model.SortColumn" asp-route-sortOrder="@Model.SortOrder" asp-route-pageSize="@Model.PageSize" aria-label="Previous">
                    <span aria-hidden="true"><i class="bi bi-chevron-left"></i></span>
                </a>
            </li>
            <li class="page-item @(Model.CurrentPage == Model.TotalPages ? "disabled" : "")">
                <a class="page-link" asp-action="Index" asp-route-page="@(Model.CurrentPage + 1)" asp-route-search="@Model.SearchQuery" asp-route-sortColumn="@Model.SortColumn" asp-route-sortOrder="@Model.SortOrder" asp-route-pageSize="@Model.PageSize" aria-label="Next">
                    <span aria-hidden="true"><i class="bi bi-chevron-right"></i></span>
                </a>
            </li>
        </ul>
    </div>
</nav>
